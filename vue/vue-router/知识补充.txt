1、什么是前端渲染和后端渲染
jsp/php
后端处理URL和页面之间的映射关系
后端渲染：页面在后端进行渲染，渲染完之后再交给前端进行展示，这种方式就叫做后端渲染
后端路由：映射关系也是由后端进行处理的，这种路由就叫做后端路由


现在：html+css+js


2、什么是前后端分离
后端只提供API来返回数据，不负责任何界面的内容，而前端通过ajax获取数据，并通过js代码将数据渲染到页面中
工作原理：前端输入url，后会去静态资源服务器中去拿去三个东西，为html，css，js，
前两个浏览器拿到后可以直接进行渲染，但是js代码会由浏览器执行，这时浏览器会向服务器再次发送一个api接口请求，
这时服务器会将大量的数据返回到浏览器，浏览器会通过其他的js代码渲染到页面中。

前端渲染：浏览器显示的网页中的大部分内容，都是由前端写的js代码在浏览器中执行，最终渲染出来的网页。
优点：这样做做大的优点就是前后端责任划分清晰，后端专注于数据上，前端专注于交互和可视化上
而且当移动端出现后，后端不需要进行任何处理，依然使用之前的一套API即可，目前很多的网站依然采用这种模式开发。

静态资源服务器中有多套html+css+js，每套都对应一个url


3、什么是前端路由
单页面富应用阶段（SPA）
主要特点就是在前后端分离的基础上，加了一层前端路由，也就是前端来维护一套路由规则

整个网页只有一个html页面

静态资源服务器中只有一套html+css+js，浏览器会请求到所有的静态资源

前端路由：用于管理url与页面之间的映射关系，配置对应关系即一个url对应一个组件
工作原理是，前端执行一件事的时候，会生成一个url，然后根据请求的事情，从所有的静态资源中将所用到的资源抽取出来，
这些资源在vue中就是一个一个的组件，改变url的时候，整个页面不进行整体的刷新。

4、url的hash和html5的history
改变网页的url但是不刷新页面,在url后面加上/home
(1)location.hash = 'home'
(2)栈：先进后出
history.pushState({},'','home')进栈
history.back()出栈
(3)不能返回，返回按钮不能点击
history.replace({},'','home')
(4)history.go(-1) 效果等同于 history.back()
history.go(-2) 
history.go(2) 
(4)history.forward() = history.go(1) 

5、安装和使用
安装 npm install vue-router --save
使用：
(1)导入路由对象
(2)创建路由实例
(3)在Vue实例中挂载创建的路由实例


6、路由懒加载的使用（用到时再加载）
当打包构建应用时，javascript包会变得非常大，影响页面加载速度。
如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问时才加载对应组件，这样就更加高效了。









